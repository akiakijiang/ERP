<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>下采购订单</title>
<link rel="stylesheet" href="js/style/zapatec/zpcal/themes/winter.css" />
<link href="styles/default.css" rel="stylesheet" type="text/css">
{insert_scripts files="../js/utils.js,../js/transport.js"}
{literal}
<style type="text/css">
	body{font-size:12px;font-family:"宋体"}
	ul,ul li{list-style:none;font-size:12px;margin:0;padding:0;background:#fff;}
	.who_get_goods{position:relative;margin:20px 0;}
	.who_get_goods ul{position:absolute;top:20px;left:54px;border:1px solid #7f9db9;width:100px;}
	.who_get_goods li{padding:3px;}
	.goods_list{ border-collapse:collapse;border:1px solid #999;}
	.goods_list td,.goods_list th{border:1px solid #999;padding:5px;}
	.goods_list input[type="text"]{height:16px;padding-top:3px;}
	.goods_list ul{position:absolute;top:23px;border:1px solid #7f9db9;width:202px;padding:5px 0;}
	.goods_list li{padding:5px;}
</style>
<link href="styles/default.css" rel="stylesheet" type="text/css">
{/literal}
</head>
<body>
<div id="hide" style="width:100%;height:100%;z-index:1;background:#ddd;position:fixed;display:none;opacity:0.5;" ></div>
<fieldset>
<h1>下采购订单</h1>
<h2>生成采购订单</h2>
<div class="who_get_goods">
	<label for="provider">供应商：</label>
	<select id="cofco_provider" onchange = "save_name(this)">
	<option value="">--请选择--</option>
	{foreach from=$providers item=provider}
		<option value='{$provider.provider_id}'>{$provider.provider_name}</option>
	{/foreach}
	</select>
	<input id=provider type="hidden"/>
	<span id="order_type_text"></span>
	&nbsp;&nbsp;&nbsp;&nbsp;<label>供应商采购订单号</label>
	<input type="text" id="provider_order"/>
	
	&nbsp;&nbsp;&nbsp;&nbsp;<label>供应商出库订单号</label>
	<input type="text" id="provider_out_order"/>
	
	&nbsp;&nbsp;&nbsp;&nbsp;<label>入库类型</label>
	<select id="inventory_type_id">
		<option value="purchase">采购入库</option>
		<option value="others">其他入库</option>
	</select>
	<br/>
	<input type="button" value="修改供应商采购" style="display:none;" id="modifyPurchaser" onclick="alert('请注意，修改的采购和供应商将影响到下面所有的待生成采购订单！');E('provider').readOnly=false;E('provider').focus();" />
	<br/>
	<label>备注</label>
	<textarea cols="60" id="mark" ></textarea>
	<span>导入采购订单文件：</span>
	<input type="file" id="fileToUpload" name="fileToUpload"/>
	<input type="button" value="导入EXCEL" onclick="bacth_c()"/>	
	<input type="button" value="批量模板下载" onclick="window.location ='?act=template'"/>

		
</div>
<table cellpadding=0 cellspacing=0 class="goods_list" width="1000">
	<tr>
		<th width="230">添加商品</th>
		<th width="100">颜色</th>
		<th width="50">数量</th>
		<th width="80">单价</th>
        <th width="50">税率</th>
		<th width="200">操作</th>
	</tr>
	<tr>
		<td>
			<div style="position:relative;">
				<input type="text" value="" id="goods" style="width:200px;" onkeyup="select_ele('goods',event)" onblur="leave_ele('goods');fill_style_list();"/>
				<input type="hidden" value="" id="goods_hidden" />
				<input type="hidden" name="dispatchListId" id="dispatchListId" />
				<input type="hidden" name="cat_name" id="cat_name" value=""></input>
				<!-- ajax调出的商品列表 -->
				<ul id="goods_list" style="display:none;">
					<li gid="-">请选择</li>
				</ul>
			</div>
		</td>
		<td>
			<div style="position:relative">
				<input type="text" value="" id="style" style="width:80px" onkeyup="select_ele('style',event)" onblur="leave_ele('style')"/>
				<input type="hidden" value="" id="style_hidden" />
				<!-- ajax调出的颜色列表 -->
				<ul id="style_list" style="display:none;width:62px;z-index:9;">
					<li gid="0">请选择商品</li>
				</ul>
			</div>
		</td>
		<td>
			<input type="text" value="1" style="width:30px;" id="goods_number" />
		</td>
		<td>
			<input type="text" value="" style="width:60px;" id="purchase_paid_amount" />
			<span id="lastPrice" style="color:#f00;"></span>
		</td>
        
        <td>
            	<input type="text" value="1.17" style="width:40px;margin-right:0;" id="purchase_added_fee" disabled="true" />
       	</td>
       	
		<td>
			<input type="hidden" id="party_id2" value="{$smarty.session.party_id}"/>
			<input type="button" value="添加" id="add_goods" onclick="add_goods()" />
			<input type="button" value="更改税率"  id='text_rate_button' onclick="modify_tax_rate()" />
		</td>
	</tr>
	</table>
		
<form action="generate_order_actionV2.php" id="form1" method="post">
	<h2>待生成采购订单</h2>
	<table cellpadding=0 cellspacing=0 class="goods_list" width="1000" style="margin-top:10px;">
	<thead>
	<tr>
  	    <th width="270">商品</th>
		<th width="110">颜色</th>
		<th width="55">数量</th>
		<th width="80">单价</th>
        <th width="50">税率</th>
		<th width="50">采购金额</th>
		<th width="50">使用返利</th>
		<th width="150">操作</th>
	</tr>
	</thead>
	<tbody id="added_goods">
	</tbody>
	</table>
<input type="hidden" value="" name="order_type" id="order_type" />
<input type="hidden" value="{$smarty.session.admin_name}" name="purchaser" id="purchaser_hidden" />
<input type="hidden" value="" name="provider_id" id="provider_hidden" />
<input type="hidden" value="c" name="generate_type" />
<input type="hidden" name="order_id" id="order_id" value="0" />
<input type="hidden" name="party_id" id="party_id" value="{$smarty.session.party_id}"/>
<label for="facility_id">收货仓库：</label>
<select name="facility_id" id="facility_id">{html_options options=$available_facility }</select>

<label type="hidden" for="benefit">使用返利金额：</label>
<input type="hidden" name="benefit" type="text" id="benefit" style="width:40px;" value="0" onblur="rebulid_amount();" /> 
<input type="hidden" type="button" value="分配到采购订单" onclick="return rebate_strategy();" /> 
<label for="currency">币种：</label>
<select name="currency" id="currency">{html_options options=$currencies}</select>
<label for="goods_amount">采购数量：</label>
<input type="text" readonly="true" style="width:40px;" id="goods_amount" value="" /> 
<label for="order_amount">应付金额：</label>
<input type="text" readonly="true" style="width:60px;" id="order_amount" value="" /> 
<label for="amount">实付金额：</label>
<input type="text" style="width:60px;" id="amount" value="0" readonly="readonly" /> 
<input type="hidden" name = "provider_order_sn" id = "provider_order_sn"/>
<input type="hidden" name = "provider_out_order_sn" id = "provider_out_order_sn"/>
<input type="hidden" name = "inventory_type" id="inventory_type"/>
<input type="hidden" name="back" value="generate_cofco_c_order.php"/>
<input type="hidden" id="remark" name="remark" />
<input type="button" id="create_c" value="生成采购订单" onclick="return check_added_goods_list();" />

{if $can_in_used}
</br>
<label for="status_id">商品状态</label>
<select id='status_id' name='status_id'>
{html_options options=$status_ids}
</select>
{/if}

</p>
</p>
</form>
</fieldset>
<div id="keycode"></div>

<div id="oldkeyword"></div>

<fieldset>
<h2>搜索采购订单</h2>
<div>
<form>
<div class="who_get_goods">
<label for="order_sn">订单：</label><input name="order_sn" id="order_sn" value="{$smarty.request.order_sn}"/>
<label for="goods_name">商品：</label><input name="goods_name" id="goods_name" value="{$smarty.request.goods_name}" />
<label for="purchase_paid_amount">采购单价：</label>
<input name="purchase_paid_amount" id="purchase_paid_amount" value="{$smarty.request.purchase_paid_amount}"/>
供应商：
	<input type="text" value="" id="provider2" onkeyup="select_ele('provider2',event);" onblur="leave_ele('provider2');"/>
	<!-- 供应商列表 -->
	<ul id="provider2_list" style='display:none;margin-left:579px;width:260px;'>
	{foreach from=$providers item=provider}
		<li gid='{$provider.provider_id}' code="{$provider.provider_code}">{$provider.provider_name}</li>
	{/foreach}
	</ul>
</div>
下采购订单时间：
<input style="width:80px" name="order_time" id="search_order_time" value="{$smarty.request.order_time}" onfocus="if (this.value == '') this.value = '{$smarty.now|date_format:"%Y-%m-%d"}'">
<input type="button" id="search_order_time_trigger" value="..." >
入库开始时间：
<input style="width:80px" name="start_in_time" id="start_in_time" value="{$start_in_time}" onfocus="if (this.value == '') this.value = '{$smarty.now|date_format:"%Y-%m-%d"}'">
<input type="button" id="start_in_time_trigger" value="..." >
入库结束时间：
<input style="width:80px" name="end_in_time" id="end_in_time" value="{$end_in_time}" onfocus="if (this.value == '') this.value = '{$smarty.now|date_format:"%Y-%m-%d"}'">
<input type="button" id="end_in_time_trigger" value="..." >
<br>
<br>
<!-- 支票号：
<input name="cheque" id="cheque" style="width:80px" value="{$smarty.request.cheque}"> -->
采购：
<select name="purchaser">
    <option value="-1"></option>
	<option value="xfeng" {if $smarty.request.purchaser == 'xfeng'}selected{/if}>xfeng</option>
	<option value="wwang" {if $smarty.request.purchaser == 'wwang'}selected{/if}>wwang</option>
	<option value="lunux" {if $smarty.request.purchaser == 'lunux'}selected{/if}>lunux</option>
	<option value="qlliu" {if $smarty.request.purchaser == 'qlliu'}selected{/if}>qlliu</option>
	<option value="yy" {if $smarty.request.purchaser == 'yy'}selected{/if}>yy</option>
	<option value="others" {if $smarty.request.purchaser == 'others'}selected{/if}>others</option>
</select>
仓库: <select name="facility_id">
<option value="-1">-选择</option>
{html_options options=$available_facility selected=$smarty.request.facility_id}
</select>

<label>供应商采购订单号：</label><input type="text" name="provider_order_sn" value="{$smarty.request.provider_order_sn}"/>
<input type="hidden" value="" name="provider_id" id="provider2_hidden" />
<input type="submit" value="搜索" onclick="this.style.display='none';">
<!--this.disabled=true;-->
<!--<input style="margin-left:400px" type="submit" name="submit" value="批量采购付款" onclick="return confirm('确认要批量付款吗？')">-->
<input type="hidden" name="act" value="search">
</form>
</div>

<form action="generate_cofco_c_orderV2.php" id="form2" method="post">
<table class="bWindow" style="margin-top:20px">
<caption><h2>{if $smarty.request.act != 'search'}今日的采购订单{else}搜索的采购订单<span><a href='generate_cofco_c_order.php'>今日的采购订单</a></span>{/if} <input type="button" name="csv" onclick="location.href='{$smarty.server.REQUEST_URI|add_param_in_url:"csv":"1"}'" value="导出CSV" /></h2></caption>
<tr>
<th>批次</th>
<th>订单号</th>
<th>订单时间</th>
<th>商品</th>
<th>供应商/采购订单号/出库订单号</th>
<th>收货仓库</th>
<th>原订单(供价*个数)</th>
<th>入库数</th>
<th>税费</th>
<th>返利金额</th>
<th>备注</th>
<th>操作</th>
</tr>
{assign var=total_goods_number value=0}
{assign var=total_purchase_paid_amount value=0}
{foreach from=$search_orders item=search_order name = "searchOrder"}

<tr align="center">
{if $search_order.count_order > 0}
	{assign var=count value=$search_order.count_order}
{else}
	{assign var=count value=1}
{/if}

{if $search_order.batch_order_sn}
<!--{if $search_order.batch_order_sn != $pre_batch_order_sn}-->
 <td rowspan="{$count}">
	{$search_order.batch_order_id}
	</br>
   <a href="batch_order_statistics.php?batch_order_sn={$search_order.batch_order_sn}">{$search_order.batch_order_sn}</a> 
   </br></br>
   {if $search_order.check_status=='INIT'}
   		<input type="button" id='batch_check_pass_{$search_order.batch_order_sn}' value="审核通过" onclick="batch_check_pass('{$search_order.batch_order_sn}')" />
    	<input type="button" id='batch_check_deny_{$search_order.batch_order_sn}' value="审核否决" onclick="batch_check_deny('{$search_order.batch_order_sn}')" />
   <br/>
   {/if}
   {if $search_order.check_status=='DENY'}
   		<span style="color:red">已否决，不会推送</span> 
   <br/>
   {/if}
   
   <input type='button' id='batch_over_c_{$search_order.batch_order_sn}' name='batch_overc' value='批量完结' {if $search_order.is_over_c =='Y'} disabled=true{/if} onclick="batch_over_c('{$search_order.batch_order_sn}');" ></input>
   {if $search_order.is_purchase_paid_total != 'YES' }
   <br/>
   		<input type="button" value="批改价格" onclick="batch_update_price('{$search_order.batch_order_sn}','{$search_order.percentage}')" />
    	<input type="button" value="批改供应商" onclick="batch_update_provider('{$search_order.batch_order_sn}','{$search_order.batch_provider_id}')" />
   {/if}
 </td>
<!--{/if}-->
{else}
<td>无批次号</td>
{/if}

<td>{$search_order.order_sn}</td>
<td>
	{$search_order.order_time}<br>
</td>
<td>{$search_order.goods_name} × {$search_order.goods_number}<!--累加商品数{assign var=total_goods_number value=$total_goods_number+$search_order.goods_number}{assign var=total_purchase_paid_amount value=$total_purchase_paid_amount+$search_order.purchase_paid_amount*$search_order.goods_number}--></td>
<td>
	{if check_admin_priv('check_provider')}
	<!--{foreach from=""|getProviders item=provider}-->
	{if $provider.provider_id == $search_order.provider_id}{$provider.provider_name}{/if}
	<!--{/foreach}-->
  {else}
  ××××××
  {/if}
  <br/>{$search_order.provider_order_sn}
  <br/>{$search_order.provider_out_order_sn}
</td>
<td>{$search_order.facility_name}</td>
<td>
  {if view_provide_price($search_order.category)}
	{$search_order.purchase_paid_amount}
  {else}
  N/A
  {/if}
	× {$search_order.goods_number}
</td>
<td>
	{$search_order.new_in_count}
</td>
<td>{$search_order.added_fee}</td>
<td>{$search_order.applied_rebate}</td>

<!--{if $search_order.batch_order_sn != $pre_batch_order_sn}-->
 <td rowspan="{$count}">
 	{$search_order.remark}
</td>
<!--{/if}-->
<td>
	{if $search_order.is_purchase_paid != 'YES' && $search_order.new_in_count == 0}
		{if $search_order.canceled}已废除{else}<input type="button" value="废除订单" onclick="destroy_order({$search_order.order_id})">{/if}
    {/if}
    {if $search_order.is_purchase_paid != 'YES' && $search_order.new_in_count > 0}
    	<input type="button" value="修改价格" onclick="update_price({$search_order.rec_id},{$search_order.purchase_paid_amount})" />
    	<input type="button" value="修改供应商" onclick="update_provider({$search_order.order_id},{$search_order.provider_id})" />
    {/if}
    {if $search_order.order_status != 5}
    <p>
    <input type="button" value="结束采购订单" onclick="over_c_order({$search_order.order_id})" />
    </p>
    {/if}
    <input type="checkbox" name="orders[{$search_order.order_id}][selected]" value="{$search_order.order_id}" checked="checked" />
    <input type="hidden" name="orders[{$search_order.order_id}][product_code]" value="{$search_order.product_code}" />
    <input type="hidden" name="orders[{$search_order.order_id}][goods_number]" value="{$search_order.goods_number}" />
</td>
</tr>
{assign var=pre_batch_order_sn value=$search_order.batch_order_sn}

{/foreach}

<tr align="center">
<td>汇总</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>{$total_purchase_paid_amount}（{$total_goods_number}）</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td><input type="submit" value="生成外部ASN文件" /><input type="hidden" name="act" value="xml" /><br>
<input type="button" value="打印批量入仓单" onclick="print_product_recei	ving_list();" /></td>
</tr>
</table>
</form>

</fieldset>
{* 弹出框 批量修改采购价格折扣 *}
<div id="batch_pencentage_dialog" style="display:none;position:fixed;width:360px;height:140px;top:50%;left:50%;margin-left:-180px;margin-top:-70px;background:#ddd;z-index:2;" title="批量修改价格折扣">
<form id="batch_change_pencentage_form" name="batch_change_pencentage_form">
<table cellpadding="5" align="center">
<tr> 
  <td>上次折扣:</td>
  <td><input type="text" name="pre_pencentage" value="" size="30" /></td>
</tr>
<tr> 
  <td>调整折扣：</td>
  <td><input type="text" name="update_pencentage" value="" size="30" />（以0.XXXX表示,1为100%,即原采购单价）</td>
</tr>
<tr>
	<td><input type="button" value="修改折扣" onclick="dialog_pencentage_ajax_submit();" /></td>
	<td><input type="button" value="取消" onclick="dialog_pencentage_disabled();" /></td>
</tr>	
</table>

<input type="hidden" name="batch_order_sn" value="" />
</form>
</div>
{* 弹出框 批量修改供应商 *}
<div id="batch_provider_dialog" style="display:none;position:fixed;width:360px;height:140px;top:50%;left:50%;margin-left:-180px;margin-top:-70px;background:#ddd;z-index:2;" title="批量修改供应商">
<form id="batch_change_provider_form" name="batch_change_provider_form">
<table cellpadding="5" align="center">
<tr> 
  <td>上次供应商:</td>
  <td><input type="text" name="pre_batch_provider_name" value="" size="30" /></td>
</tr>
<tr> 
  <td>调整供应商：</td>
  <td>
  	<input type="text" value="" size="30" id="provider4" onkeyup="select_ele('provider4',event);" onblur="leave_ele('provider4');"/>
	<!-- 供应商列表 -->
	<ul id="provider4_list" style='display:none;width:260px;'>
	{foreach from=$providers item=provider}
		<li gid='{$provider.provider_id}' code="{$provider.provider_code}">{$provider.provider_name}</li>
	{/foreach}
	</ul>
  </td>
</tr>
<tr>
	<td><input type="button" value="修改供应商" onclick="dialog_batch_provider_ajax_submit();" /></td>
	<td><input type="button" value="取消" onclick="dialog_batch_provider_disabled();" /></td>
</tr>	
</table>
<input type="hidden" name="pre_batch_provider_id" value="" />
<input type="hidden" value="" name="update_batch_provider_id" id="provider4_hidden" />
<input type="hidden" name="batch_order_sn" value="" />
</form>
</div>
{* 弹出框 修改价格 *}
<div id="dialog" style="display:none;position:fixed;width:360px;height:140px;top:50%;left:50%;margin-left:-180px;margin-top:-70px;background:#ddd;z-index:2;" title="修改价格">
<div id="dialogTips" style="color:#990; text-align:center; font-weight:bold;"></div>
<div id="dialogOrderInfo" style="text-align:center;"></div>
<form id="payment_transaction_create_form" name="payment_transaction_create_form">
<table cellpadding="5" align="center">
<tr> 
  <td>上次价格:</td>
  <td><input type="text" name="pre_price" value="" size="30" /></td>
</tr>
<tr> 
  <td>调整价格：</td>:</td>
  <td><input type="text" name="update_price" value="" size="30" /></td>
</tr>
<tr>
	<td><input type="button" value="修改价格" onclick="dialog_ajax_submit();" /></td>
	<td><input type="button" value="取消" onclick="dialog_disabled();" /></td>
</tr>	
</table>

<input type="hidden" name="rec_id" value="" />
</form>
</div>
{* 弹出框 修改供应商*}
<div id="dialog_provider" style="display:none;position:fixed;width:360px;height:140px;top:50%;left:50%;margin-left:-180px;margin-top:-70px;background:#ddd;z-index:2;" title="修改供应商">
<form id="change_provider_form" name="change_provider_form">
<table cellpadding="5" align="center">
<tr> 
  <td>原来供应商:</td>
  <td><input type="text" name="pre_provider_name" value="" size="30" />
  </td>
</tr>
<tr> 
 	<td>修改 供应商：</td>
 	<td>
	<input type="text" value="" size="30" id="provider3" onkeyup="select_ele('provider3',event);" onblur="leave_ele('provider3');"/>
	<!-- 供应商列表 -->
	<ul id="provider3_list" style='display:none;width:260px;'>
	{foreach from=$providers item=provider}
		<li gid='{$provider.provider_id}' code="{$provider.provider_code}">{$provider.provider_name}</li>
	{/foreach}
	</ul>
	</td>
</tr>
<tr>
	<td><input type="button" value="修改供应商" onclick="dialog_provider_ajax_submit();" /></td>
	<td><input type="button" value="取消" onclick="dialog_provider_disabled();" /></td>
</tr>	
</table>
<input type="hidden" name="pre_provider_id" value="" />
<input type="hidden" name="order_id" value="" />
<input type="hidden" value="" name="update_provider_id" id="provider3_hidden" />
</form>
</div>
<script type="text/javascript" src="js/style/zapatec/utils/zapatec.js"></script>
<script type="text/javascript" src="js/style/zapatec/zpcal/src/calendar.js"></script>
<script type="text/javascript" src="js/style/zapatec/zpcal/lang/calendar-en.js"></script>
<script type="text/javascript" src="js/js/jquery.js"></script>

<script type="text/javascript" src="misc/jquery.ajaxQueue.js"></script>
<script type="text/javascript" src="misc/ajaxfileupload.js"></script>
<script type="text/javascript">
var order_type = new Array();
var providers = new Array();
var purchasers = new Array();
{foreach from=$providers item=provider}
order_type[{$provider.provider_id}] = '{$provider.provider_order_type}';
providers.push(new Array('{$provider.provider_id}', '{$provider.provider_code}', '{$provider.provider_name}'));
{/foreach}
{foreach from=$purchasers item=purchaser}
purchasers.push('{$purchaser}');
{/foreach}

{literal}
var process_request = '';
var oldkeyword = '';
var last_goods;
var is_calling = false;
var added_goods_list = new Array();
var need_check_style = false;
var last_style;

	var contrl = {
		tmp : '', //  input里的值默认值
		num : -1, //  li的所在的列数
	}
	function E(id) {
		return document.getElementById(id);
	}
	
	//批量导入采购订单
	function bacth_c(){
		var provider = E('provider').value;
		var party_id = E('party_id').value;
		var order_type = E('order_type').value;
		if(provider == ""){
			alert("请先选择供应商");
			return;
		}
		$.ajaxFileUpload({
			url:'batch_cofco_c_order.php?party_id='+party_id+'&order_type='+order_type,
			secureuri:false,
			fileElementId:'fileToUpload',
			dataType: 'json',
			success: function (data)
			{
				added_goods_list = data.content;
				if(data.message == "")
				{
					redraw_table();
					init_table();
				}else{
					alert(data.message);
				}
			},
			error: function (data, status, e)
			{
				alert("方法调用错误，请联系ERP组");
			}
		})
	}
	
	
	//导出采购点单项
	function showDetail(){
		var filename = E('c_select').value;
		if(filename == "-1"){
			alert("请选择正确的入库通知单");
			return;
		}
		location.href='/admin/generate_cofco_c_orderV2.php?export=1&filename='+filename;
	}
	
	
    function load_by_dispatch_list_sn (event) {
        eventObj = event == null ? window.event : event;
        keyCode = eventObj.which==null ? event.keyCode : eventObj.keyCode;
        if (keyCode == 17) {
            var dispatchListSn = E('dispatchListSn').value;
            Ajax.call('ajax.php?act=get_goods_by_dispatch_list_sn', 'dispatchListSn='+dispatchListSn, load_by_dispatch_list_sn_response, 'POST', 'JSON'); 
        }
    }
    
    function load_by_dispatch_list_sn_response (result) {
        if (result.error) {
            alert(result.error);
            return;
        }
        
        if (!result.can_new_purchase_order) {
            alert(result.info);
            return;
        }
        
        if (result.info) {
            if (!confirm(result.info)) {
                return;
            }
        }
        
        last_style = new Array();
        
        for (var i = 0; i < result.rows.length;  i++) {
            row = result.rows[i];
            E('goods').value = (row.goods_name);
            E('goods_hidden').value = (row.goods_id);
            E('cat_name').value = (row.cat_name);
            E('style').value = (row.style_name);
            E('style_hidden').value = (row.style_id);
            E('goods_number').value = (row.goods_number);
            
            E('provider').value = (row.provider_name);
            E('provider_hidden').value = (row.provider_id);
            E('order_type').value = order_type[row.provider_id]; 
            
            E('purchase_paid_amount').value = (row.price);
            E('dispatchListId').value  = row.dispatchListId;
            // E('customized').checked = true;
    
            last_style.push(row.style_id);
            
            // 增加商品
            add_goods();
        }
    }
	
	//更改税率,将税率下文本框改变为writable
	function modify_tax_rate()
	{
		var taxRate = E('purchase_added_fee');
		var enterButton = E('text_rate_button');
		if(enterButton.value == '更改税率')
		{
			taxRate.disabled = false;
			taxRate.select();
			enterButton.value = "确认";	
		}
		else if(enterButton.value == '确认')
		{
			if(taxRate.value >= 0 && taxRate.value <= 2)
			{
				alert('修改税率成功');	
			}
			else{
				taxRate.value='1.17';
				alert('修改税率失败');
			}
				
			taxRate.disabled = true;
			enterButton.value = '更改税率';
		}
	}
	/**
	 * 表单提交前检查商品列表，检查返利是否合理分配了
	 */
	function check_added_goods_list() {
		var trs = E('added_goods').getElementsByTagName('tr');
		
		if(trs.length == 0) {
			alert('没有添加货物');
			return false;
		}
		
		
		
		// 累加商品对应的返利
		var rebate_total = 0;
		for (var i = 0; i<added_goods_list.length; i++) {
			rebate_total += added_goods_list[i][9];
		}
  		if(E('provider_hidden').value == null || E('provider_hidden').value == ''){
  			alert('请选择供应商');
  			return false;
  		}
		// 如果有返利      
		var b = E('benefit').value;
		if (b) {
			if (!/^\d+(\.\d+)?$/.test(b)) {
				alert('返利金为数字');
				return false;			
			}

			b = parseFloat(b);
			if ( b != rebate_total ) {
				alert('返利总额和分配到各个商品的返利不一致，请分配返利金额或者手动输入每个商品使用的返利金额');
				return false;
			}
			
			if ( b > parseFloat(E('order_amount').value) ) {
				alert('返利金额不能大于付款总额');
				return false;
			}			
		}
		
		$("#provider_order_sn").val($("#provider_order").val());
		$("#provider_out_order_sn").val($("#provider_out_order").val());
		$("#inventory_type").val($("#inventory_type_id").val());
		$("#remark").val($("#mark").val());
		E('create_c').disabled = true;
	  E('form1').submit();
	}
	
	/**
	 * 重新计算总价, 新的总价 = 原来的总价 - 返利
	 */
	function rebulid_amount()
	{
		var b = E('benefit').value;
		var a = E('order_amount').value;
		
		if (!/^\d+(\.\d+)?$/.test(a)) {
			a = 0;
		} else {
			a = parseFloat(a);
		}
		
		if (b && !/^\d+(\.\d+)?$/.test(b)) {
			alert('请输入正确的返利金额');
			E('benefit').blur();
			return false;
		}
		
		b = parseFloat(b);
		if ( b > a ) {
			alert('返利金额不能大于付款总额');
			return false;
		}
		E('amount').value = Math.round( (a - b)*100 ) /100;
	}
	
	/**
	 * 添加商品
	 */
	function add_goods() {
	  /*if(E('purchaser_hidden').value == '') {
	    if( purchasers.in_array(E('purchaser').value) ) {
	      E('purchaser_hidden').value == E('purchaser').value;
	    } else {
	      E('purchaser').focus();
  	    alert('请选择采购');
  	    return false;
	    }
	  }*/

	  if(!/^(\d+)$/.test(E('provider_hidden').value)) {
	    if( providers.in_array(E('provider').value) ) {
	      E('provider_hidden').value = E('provider').value;
	    } else {
  	    E('provider').focus();
  	    alert('请选择供应商');
  	    return false;
	    }
	  }
		
	  if(!/^(\d+)$/.test(E('goods_hidden').value)) {
	    E('goods').focus();
	    alert('请选择商品');
	    return false;
	  }
		
	  if(!/^(\d+)$/.test(E('goods_number').value)) {
	    E('goods_number').focus();
	    alert('请输入正确的商品数量');
	    return false;
	  }

		if(!last_style.in_array(E('style_hidden').value)) {
	      alert('请选择正确的商品颜色');
	      E('style').focus();
  	    return false;
		}

	  if(!/^(\d+)(.\d+)?$/.test(E('purchase_paid_amount').value)) {
	    E('purchase_paid_amount').focus();
	    alert('请输入正确的供价');
	    return false;
	  }
	  
	  if (E('party_id2').value == 65586 && E('combi_production_date').value =="") {
		  if (! confirm("确认不填生产日期吗？这对给康贝发货单有影响.")) {
			  return false;
		  }
	  }
	  
	  if (E('party_id2').value == 65586 && E('combi_batch_sn').value =="") {
		  if (! confirm("确认不填批次号吗？这对康贝发货单有影响.")) {
			  return false;
		  }
	  }
	  
		// 商品属性
	  var added_goods = new Array();
	  added_goods[0] = E('goods').value;
	  added_goods[1] = E('goods_hidden').value;
	  added_goods[2] = E('style').value;
	  added_goods[3] = E('style_hidden').value;
	  added_goods[4] = parseInt(E('goods_number').value);  // 数量
	  added_goods[5] = parseFloat(E('purchase_paid_amount').value); // 采购单价
	  added_goods[8] = Math.round(added_goods[5] * 100 * added_goods[4]) / 100;  // 采购价
	  added_goods[9] = 0;  // 返利
      added_goods[10] = parseFloat(E('purchase_added_fee').value); // 税率
      added_goods[11] = E('dispatchListId').value;// 工单号
      added_goods[12] = '';
      added_goods[13] = E('cat_name').value;
      
	  
      // 判断是否已经存在，一个批次同种商品只能采购一次 ljzhou 2013-09-10
      for(i = 0; i < added_goods_list.length; i++) {
    	  if(added_goods[1] == added_goods_list[i][1] && added_goods[3] == added_goods_list[i][3] ) {
    		  //alert('该商品已经存在，一个批次同种商品只能采购一次！');
    		  //return false;
    	  }
      }

      // 判断是否维护了条码
      var is_maintain_barcode = check_goods_maintain_barcode(added_goods[1],added_goods[3]);
      if(!is_maintain_barcode) {
    	  alert('该商品未维护条码，请店长先维护条码！');
    	  return false;
      }
      
	  added_goods_list.push(added_goods);
	  redraw_table();
	  init_table();
	  E('goods').focus().select();
	  E('style_hidden').value = '';
	  
//	  E('purchaser').readOnly = true;
	  E('provider').readOnly = true;
	  
	  E('modifyPurchaser').style.display = '';
	}
	
	/**
	 * 删除商品
	 */
	function remove_added_goods(i) {
	  if (added_goods_list[i][9] > 0) {
	      if(!confirm("该商品准备使用返利：" + added_goods_list[i][9] + "，是否要删除？") ) return false;
	  }
	  added_goods_list.remove(i);
	  redraw_table();
	  re_calculate_rebate();
	}
	
	/**
	 * 重新渲染商品列表
	 */
	function redraw_table() {
	  var i = 0;
	  var html = '';
	  var total = 0;
	  var goods_number = 0;
	  for(i = 0; i < added_goods_list.length; i++) {
	    added_goods = added_goods_list[i];
	    html += "<tr><td>" + added_goods[0] + "</td>";
		  html += "<td>" + added_goods[2] + "</td>";
		  html += "<td>" + added_goods[4] + "</td>";
		  html += "<td>" + added_goods[5] + "</td>";
          html += "<td>" + added_goods[10] + "</td>";
		  html += '<td>' + added_goods[8] + '</td>';
		  html += '<td><input type="text" id="rebate_' + i + '" name="rebate[]" value="' + added_goods[9] + '" onkeyup="change_rebate(' + i +')" style="width:40px;" /></td>';
		  html += '<input type="hidden" name="goods_id[]" value="'+ added_goods[1] +'" /> ';
		  html += '<input type="hidden" name="style_id[]" value="'+ added_goods[3] +'" />';
		  html += '<input type="hidden" name="goods_number[]" value="' + added_goods[4] + '" />';
		  html += '<input type="hidden" name="purchase_paid_amount[]" value="' + added_goods[5] + '" />';
          html += '<input type="hidden" name="purchase_added_fee[]" value="' + added_goods[10] + '" />';
		  html += '<input type="hidden" name="dispatchListId[]" value="' + added_goods[11] + '" />';
          html += '<td><input type="button" value="删除" onclick="remove_added_goods(' + i + ')" /></td>	</tr>';
		  total += Math.floor(added_goods[5] * 100 * added_goods[4]) / 100;
		  goods_number += Math.floor(added_goods[4]);
	  }
		total = Math.round( total * 100 ) / 100;
	    E('added_goods').innerHTML = html;
		E('order_amount').value = total;	
		E('goods_amount').value = goods_number;
		
		var benefit = E('benefit').value;
		if (benefit) {
			E('amount').value = Math.round( (total - parseFloat(benefit)) * 100 ) /100;
		} else {
			E('amount').value = total;	
		}
	}
	
	function select_radio(radio_name) {
	  var radio = document.getElementsByName(radio_name);
    for(var i=0;i<radio.length;i++) {
      if (radio[i].checked) {
        return(radio[i].value);
        break;
      }
    }
    return null;
  }
  function unselect_radio(radio_name) {
      var radio = document.getElementsByName(radio_name);
      for(var i=0;i<radio.length;i++) {
          radio[i].checked = false;
      }
  }
	
	Array.prototype.remove=function(dx)
  {
    if(isNaN(dx)||dx>this.length){return false;}
    for(var i=0,n=0;i<this.length;i++)
    {
        if(this[i]!=this[dx])
        {
            this[n++]=this[i]
        }
    }
    this.length-=1
  }
  Array.prototype.in_array=function(ele)
  {
    for(var i=0,n=0;i<this.length;i++) {
        if(this[i] == ele) {
            return true;
            break;
        }
    }
    return false;
  }
  
	function select_ele(id,e){
		var evt = e || window.event;
		E(id+'_list').style.display = '';
		var oli = E(id+'_list').getElementsByTagName('li');
		if (oli.length > 0) {
			if (evt.keyCode == 40){
				if (contrl.num < oli.length){
					contrl.num++;
				}
				if( contrl.num == oli.length){
					contrl.num = 0;
					oli[oli.length-1].style.background = '#fff';
					oli[oli.length-1].style.color = '#000';
				}

				if (contrl.num >=0 && contrl.num < oli.length){
					if (contrl.num !=0 ){
						oli[contrl.num-1].style.background = '#fff';
						oli[contrl.num-1].style.color = '#000';
					}
						
					oli[contrl.num].style.background = '#36c';
					oli[contrl.num].style.color = '#fff';
					contrl.tmp = E(id).value = oli[contrl.num].innerHTML;
				}
			}else if(evt.keyCode == 38){
				if(contrl.num >= 0){
					contrl.num--;
				}
				if(contrl.num == -1){
					contrl.num = oli.length-1;
					oli[0].style.background = '#fff';
					oli[0].style.color = '#000';
				}
				if(contrl.num < oli.length-1){
					oli[contrl.num+1].style.background = '#fff';
					oli[contrl.num+1].style.color = '#000';
				}
				if(contrl.num >= 0){
					oli[contrl.num].style.background = '#36c';
					oli[contrl.num].style.color = '#fff';
					contrl.tmp = E(id).value = oli[contrl.num].innerHTML;
				}

			}
			
			if(contrl.num >= 0 && contrl.num < oli.length){
				E(id+'_hidden').value = oli[contrl.num].attributes['gid'].value;
				if (id == 'goods') {
					E('cat_name').value = oli[contrl.num].attributes['cid'].value;
					var pid = E('provider_hidden').value;
					if (E('cat_name').value == "耗材商品") {
						E('purchase_paid_amount').value = '';
		      			E('purchase_paid_amount').readOnly = false;
		      			E("lastPrice").innerHTML = "耗材商品";
					} else {
						if (order_type[pid] == 'DX') {
							E('purchase_paid_amount').value = '0';
			      			E('purchase_paid_amount').readOnly = true;
			      			E("lastPrice").innerHTML = "DX单价为0";
						} else {
							E('purchase_paid_amount').value = '0';
			      			E('purchase_paid_amount').readOnly = false;
							E("lastPrice").innerHTML = "";
						}
					}
				}
			}
		}
	}

	function leave_ele(id) {
		contrl.num = -1;
		contrl.tmp = '';
		E(id+'_list').style.display = 'none';
	}
	function key_event(e,code,fuc){
		var evt = e || window.event;
		//E('keycode').innerHTML = e.keyCode;
		if(evt.ctrlKey && evt.shiftKey && evt.keyCode == code){
			fuc();			
		}
	}
	
	var go_style = function(){
		E('style').focus();
	}
	
	function fill_goods_list() {
	  var keyword = E("goods").value;
	  E('oldkeyword').innerHTML = ("keyword:" + keyword + " oldword: " + oldkeyword +'['+ keyword.indexOf(oldkeyword) +']' );
      if (keyword != '') {
	      if(false && last_goods && keyword.toUpperCase().indexOf(oldkeyword.toUpperCase()) != -1) { // 如果新输入的关键词包含老的关键词，那么不需要ajax call了
	        var html = '';
	//        E('oldkeyword').innerHTML += 'inin9i ';
	        var goodsCnt = last_goods.length;
	        for (var i = 0; i < goodsCnt; i++)
	        {
	          if(last_goods[i].name.toUpperCase().indexOf(keyword.toUpperCase()) != -1) { // 如果商品名中有新的关键词，那么就留下
	            html += '<li gid="' + last_goods[i].goods_id + '">' + last_goods[i].name + '</li>';
	          }
	        }
	        E('goods_list').innerHTML = html;
	      } else {
	        setTimeout(searchGoods, 500);
	      }
      }
	}
	
	
	function searchGoods() {
	  if(!is_calling) {
	    is_calling = true;
  	    var keyword = E("goods").value;
  	    if (keyword != '' && keyword != oldkeyword) {
          Ajax.call('order.php?act=search_goods&keyword=' + keyword, '', searchGoodsResponse, 'GET', 'JSON'); 
          oldkeyword = keyword;
        } else {
          is_calling = false;
        }
	  }
	}
	
	function searchGoodsResponse(result)
  {
    is_calling = false;
    if (result.message.length > 0)
    {
      alert(result.message);
    }
    if (result.error == 0)
    {
      var html = '';
      var arr = result.goodslist;
      var goodsCnt = arr.length;
      if (goodsCnt > 0) {
        for (var i = 0; i < goodsCnt; i++)
        {
          html += '<li gid="' + arr[i].goods_id + '" cid= "'+ arr[i].cat_name +'">' + arr[i].name + '</li>';
        }
        last_goods = arr;
        E('goods_list').innerHTML = html;
      } else {
    	E('goods_list').innerHTML = '';
	  }
    }
    else
    {
	  E('goods_list').innerHTML = '';
    }
  }
  
  function fill_style_list() {
    searchGoodsStyle();
  }
  function searchGoodsStyle() {
    var goods_id = E('goods_hidden').value;
    if (goods_id != '') {
      Ajax.call('order.php?act=search_goods_style&no_storage_info=1&goods_id=' + goods_id, '', searchGoodsStyleResponse, 'GET', 'JSON');
    }
  }
    
  function searchGoodsStyleResponse(result) {
    if (result.message.length > 0) {
      alert(result.message);
    }
    if (result.error == 0) {
	    var html = '';
      var arr = result.goods_style_list;
      var style_length = arr.length;
      if (style_length > 0) {
        last_style = new Array();
        for (var i = 0; i < style_length; i++) {
          last_style.push(arr[i].style_id);
          html += '<li gid="' + arr[i].style_id + '">' + arr[i].color + '</li>';
        }
        E('style_list').innerHTML = html;
//        need_check_style = true;
      } else {
        last_style = new Array();
        last_style.push(0);
        E('style_list').innerHTML = '<li gid="0">无颜色</li>';
        E('style').value = '无颜色';
        E('style_hidden').value = 0;
//        need_check_style = false;
      }
//      getLastPrice();
    }
  }
  
  function fill_provider_list(id) {
    var provider = E(id).value;
    var html = '';
    var provider_name = '';
    for(var i = 0; i < providers.length; i++) {
      provider_name = providers[i][2];
      if(providers[i][1].toUpperCase().indexOf(provider.toUpperCase()) != -1 || provider_name.toUpperCase().indexOf(provider.toUpperCase()) != -1)
      html += '<li gid="' + providers[i][0] + '">' + provider_name + '</li>'
    }
    E(id+'_list').innerHTML = html;
  }
  
  function changeProvider(id, tips) {
    var provider = E(id).value;
    var pid = E(id+'_hidden').value;
    if (tips) {
      	if (pid == '') {
      		E('order_type_text').innerHTML='请选择供应商';
      	} else {
      		E('order_type').value = order_type[pid]; 
      		E('order_type_text').innerHTML= ' 订单类型：' + order_type[pid];
      		if(order_type[pid] == 'DX'){
      			E('purchase_paid_amount').value = '0';
      			E('purchase_paid_amount').readOnly = true;
      			E("lastPrice").innerHTML = "DX单价为0";
      		}else{
      			E('purchase_paid_amount').value = '';
      			E('purchase_paid_amount').readOnly = false;
      			E("lastPrice").innerHTML = "";
      		}
      	}
    }
  }
  
  function fill_purchasers() {
    var purchaser = E('purchaser').value;
    var html = '';
    var matched = 0;
    var matched_i = 0;
    for(var i = 0; i < purchasers.length; i++) {
      if(purchasers[i].toUpperCase().indexOf(purchaser.toUpperCase()) != -1 || purchaser == '') {
        html += '<li gid="' + purchasers[i] + '">' + purchasers[i] + '</li>';
        matched++;
        matched_i = i;
      }
    }
    if(matched == 1) { E('purchaser_hidden').value = purchasers[matched_i];  }
    E('purchaser_list').innerHTML = html;
  }
	
  function getLastPrice() {
    /* 填充列表 */
    var goods_id = E('goods_hidden').value;
    var style_id = E('style_hidden').value;
    if (goods_id != '') {
      Ajax.call('order.php?act=search_last_price&goods_id=' + goods_id + '&style_id=' + style_id, '', getLastPriceResponse, 'GET', 'JSON');
    }
  }
  
  function getLastPriceResponse(result) {
    if (result.message.length > 0) {
      alert(result.message);
    }
    if (result.price >= 0) {
      if(/^(\d+)(.\d+)?$/.test(result.price)) {
        E("lastPrice").innerHTML = "上次 " + result.price;
      } else {
        E("lastPrice").innerHTML = "无供价记录 ";
      }
    }
  }
  
//	E('purchaser').addEventListener('keydown', function(e){var evt = e || window.event;if(evt.keyCode == 13) E('provider').focus(); }, false); // 13 enter
//	E('purchaser').addEventListener('keyup', function(e){var evt = e || window.event; if(evt.keyCode != 40 && evt.keyCode != 38) fill_purchasers(); }, false); // 13 enter
	E('provider_order').addEventListener('keydown', function(e){  var evt = e || window.event;if(evt.keyCode == 13) E('provider_out_order').focus(); }, false);
	E('provider_out_order').addEventListener('keydown', function(e){  var evt = e || window.event;if(evt.keyCode == 13) E('goods').focus(); }, false);
	E('goods').addEventListener('keydown', function(e){var evt = e || window.event;if(evt.keyCode == 13) { E('style').focus(); fill_style_list(); } else {/* fill_goods_list();*/ } }, false); // 13 enter
	E('goods').addEventListener('keyup', function(e){var evt = e || window.event; if(evt.keyCode != 40 && evt.keyCode != 38)  fill_goods_list();  }, false); // 13 enter
//	E('goods').addEventListener('onchange', function(e){var evt = e || window.event;if(evt.keyCode != 13) E('goods_list').innerHTML = '<li>asdfas111</li><li>asdfas222</li>'; }, false); 
	E('style').addEventListener('keydown', function(e){var evt = e || window.event;if(evt.keyCode == 13) { E('goods_number').focus(); E('goods_number').select(); }  }, false); // 13 enter
	E('style').addEventListener('keyup', function(e){var evt = e || window.event;getLastPrice(); }, false); // 13 enter
	E('goods_number').addEventListener('keydown', function(e){var evt = e || window.event;if(evt.keyCode == 13) { E('purchase_paid_amount').focus(); E('purchase_paid_amount').select(); } }, false); 
	E('purchase_paid_amount').addEventListener('keydown', function(e){var evt = e || window.event;if(evt.keyCode == 13) E('purchase_added_fee').focus(); }, false); 
    E('purchase_added_fee').addEventListener('keydown', function(e){var evt = e || window.event;}, false); 
  
	window.addEventListener('keydown', function(e){key_event(e,49,go_style)}, false); // 49 1
	
    function destroy_order(order_id) {
        if (!confirm('重要！在废除订单之前请和仓库确认该订单不会入库！\n\n废弃请确认，不废弃请取消'))
          return;
        var form_obj = E('form1');
        form_obj.order_id.value = order_id;
        form_obj.generate_type.value = 'destroy_c';
        form_obj.submit();
    }
	
	function over_c_order(order_id){
		if(!confirm('重要！请确认是否要完结该采购订单！\n\n完结请确认，不完结请取消'))
			return;
		var form_obj = E('form1');
		form_obj.order_id.value = order_id;
		form_obj.generate_type.value = 'over_c';
		form_obj.submit();
	}
    
    function rebate_strategy() {
        var pay = 0;
        var rebate = parseFloat(E("benefit").value);

				// 算总价
        for (var i = 0; i < added_goods_list.length; i++) {            
            pay += added_goods_list[i][8];
        }
				pay = Math.round(pay * 100) / 100;

        if (rebate > pay) {
					alert("返利金额不能大于商品总额");
					return false;
        }
        
        if (rebate == 0) {
					for (var i = 0; i < added_goods_list.length; i++) {
						 added_goods_list[i][9] = 0;
					}
        } else {
					var added_goods;
					var rebate_snippet = 0;
					var rebate_left = rebate;
					for (var i = 0; i < added_goods_list.length; i++) {
							added_goods = added_goods_list[i];
							if (rebate_left <= 0) break;
							rebate_snippet = Math.floor(rebate * added_goods[8] / pay );
							added_goods[9] = rebate_snippet;
							rebate_left -= rebate_snippet;
					}
					rebate_left = Math.round(rebate_left * 100) / 100 ;
					
					if (rebate_left > 0) {
							for (var i = 0; i < added_goods_list.length; i++) {
									if (rebate_left <= 0) break;
									added_goods = added_goods_list[i];
									rebate_snippet = Math.min((added_goods[8] - added_goods[9]), rebate_left);
									added_goods[9] += rebate_snippet;
									rebate_left -= rebate_snippet;
							}
					}
        }
        
        redraw_table();
    }
    
    function change_rebate(i) {
        var rebate_obj =  E('rebate_' + i);
        if(!rebate_obj) {
            alert("请刷新页面");
            return false;
        }
        var rebate = rebate_obj.value;
        if(!/^\d+(\.\d+)?$/.test(rebate)) {
            alert("请输入正确的返利金额");
            return false;
        }
        if(Number(added_goods_list[i][8]) < Number(rebate)) {
            alert("返利金额大于采购金额");
            rebate_obj.select();
            rebate_obj.focus();
            return false;
        }
        added_goods_list[i][9] = Number(rebate);
        re_calculate_rebate();
    }
    
    function re_calculate_rebate() {
        var rebate_total = 0;
        for (var i = 0; i<added_goods_list.length; i++) {
            rebate_total += parseFloat(added_goods_list[i][9]);
        }
        E("benefit").value = rebate_total;
        E('amount').value = Math.round( (parseFloat(E('order_amount').value) - rebate_total) *100 ) / 100;
    }
    function init_table() {
    	var order_type = E('order_type').value;
        E('goods').value = '';
        E('goods_hidden').value = '';
        E('style').value = '';
        E('style_hidden').value = '';
        E('goods_number').value = '1';
        E('cat_name').value = '';
  	    if(order_type == 'DX'){
  		    E('purchase_paid_amount').value = '0';
  	    }else{
  	    	E('purchase_paid_amount').value = '';
  	    }
        // unselect_radio('customized');
    }
{/literal}
</script>
<script type="text/javascript">
{literal}
//<![CDATA[
      Zapatec.Calendar.setup({
        weekNumbers       : false,
        electric          : false,
        inputField        : "search_order_time",
        button            : "search_order_time_trigger",
        ifFormat          : "%Y-%m-%d",
        daFormat          : "%Y-%m-%d"
      });
      Zapatec.Calendar.setup({
        weekNumbers       : false,
        electric          : false,
        inputField        : "start_in_time",
        button            : "start_in_time_trigger",
        ifFormat          : "%Y-%m-%d",
        daFormat          : "%Y-%m-%d"
      });    
      Zapatec.Calendar.setup({
        weekNumbers       : false,
        electric          : false,
        inputField        : "end_in_time",
        button            : "end_in_time_trigger",
        ifFormat          : "%Y-%m-%d",
        daFormat          : "%Y-%m-%d"
      });     
      
    //]]>
     function update_price(rec_id,unit_cost){
         var $form   = $('#payment_transaction_create_form');
         var $dialog = $("#dialog");
         $dialog.show();
         $("#hide").show();
         $form.find(":input[name='pre_price']").val(unit_cost);
         $form.find(":hidden[name='rec_id']").val(rec_id); // 设置表单内的订单id
     }
     function dialog_ajax_submit()
     {		
         var $form   = $('#payment_transaction_create_form');
         
         var pre_price = $form.find(":input[name='pre_price']").val();
         var rec_id = $form.find(":hidden[name='rec_id']").val();
         var update_price = $form.find(":input[name='update_price']").val();
         var datastr = 'rec_id=' + rec_id + '&pre_price='+pre_price + '&update_price='+update_price;
         $.ajax({
	 		  async:false,
	          type: 'POST',
	          url: 'generate_cofco_c_orderV2.php?act=update_unit_price',
	          data: datastr,
	          dataType: 'json',
	          error: function() {
	        	  dialog_disabled();
	          },
	          success: function(data) {
	        	  dialog_disabled();
	          }
	      });
                   
     }
	/**
 	 * 面板禁用
 	 */
 	function dialog_disabled() {
 		var $dialog = $("#dialog");
 		$dialog.hide();
         $("#hide").hide();
         location.reload();
 	}
     /**
      * 批量修改采购单价
      */
      function batch_update_price(batch_order_sn,percentage){
          var $form   = $('#batch_change_pencentage_form');
          var $dialog = $("#batch_pencentage_dialog");
          $dialog.show();
          $("#hide").show();
          $form.find(":input[name='pre_pencentage']").val(percentage);
          $form.find(":hidden[name='batch_order_sn']").val(batch_order_sn); // 设置表单内的订单id
      }
      function dialog_pencentage_ajax_submit()
      {		
          var $form   = $('#batch_change_pencentage_form');
          var pre_pencentage = $form.find(":input[name='pre_pencentage']").val();
          var batch_order_sn = $form.find(":hidden[name='batch_order_sn']").val();
          var update_pencentage = $form.find(":input[name='update_pencentage']").val();
          var datastr = 'batch_order_sn=' + batch_order_sn + '&pre_pencentage='+pre_pencentage + '&update_pencentage='+update_pencentage;
          $.ajax({
 	 		  async:false,
 	          type: 'POST',
 	          url: 'generate_cofco_c_orderV2.php?act=update_batch_pencentage',
 	          data: datastr,
 	          dataType: 'json',
 	          error: function() {
 	        	  dialog_pencentage_disabled();
 	          },
 	          success: function(data) {
 	        	  if(data.status == true && data.detail != ''){
 	        		  alert(data.detail);
 	        	  }
 	        	  dialog_pencentage_disabled();
 	          }
 	      });
                    
      } 
	function dialog_pencentage_disabled() {
		var $dialog = $("#batch_pencentage_dialog");
		$dialog.hide();
        $("#hide").hide();
        location.reload();
	}
	/**
     * 批量修改供应商
     */
     function batch_update_provider(batch_order_sn,provider_id){
         var $form   = $('#batch_change_provider_form');
         var $dialog = $("#batch_provider_dialog");
         $dialog.show();
         $("#hide").show();
         $form.find(":input[name='pre_batch_provider_id']").val(provider_id);
         for(var i = 0; i<providers.length;i++)
         {
         	if(providers[i][0] == provider_id){
         		$form.find(":input[name='pre_batch_provider_name']").val(providers[i][2]);
         	}
         }
         $form.find(":hidden[name='batch_order_sn']").val(batch_order_sn);
     }
     function dialog_batch_provider_ajax_submit()
     {		
         var $form   = $('#batch_change_provider_form');
         var pre_batch_provider_id = $form.find(":input[name='pre_batch_provider_id']").val();
         var batch_order_sn = $form.find(":hidden[name='batch_order_sn']").val();
         var update_batch_provider_id = $form.find(":input[name='update_batch_provider_id']").val();
         if(update_batch_provider_id == pre_batch_provider_id){
          	alert("和原供应商相同,请检查!");
          	return;
          }
          var datastr = 'batch_order_sn=' + batch_order_sn + '&pre_batch_provider_id='+pre_batch_provider_id + '&update_batch_provider_id='+update_batch_provider_id;
         $.ajax({
	 		  async:false,
	          type: 'POST',
	          url: 'generate_cofco_c_orderV2.php?act=update_batch_provider',
	          data: datastr,
	          dataType: 'json',
	          error: function() {
	        	  dialog_batch_provider_disabled();
	          },
	          success: function(data) {
	        	  dialog_batch_provider_disabled();
	          }
	      });
                   
     } 
	function dialog_batch_provider_disabled() {
		var $dialog = $("#batch_provider_dialog");
		$dialog.hide();
       $("#hide").hide();
       location.reload();
	} 
	
	function update_provider(order_id,provider_id){
        var $form   = $('#change_provider_form');
        var $dialog = $("#dialog_provider");
        $dialog.show();
        $("#hide").show();
        $form.find(":input[name='pre_provider_id']").val(provider_id);
        for(var i = 0; i<providers.length;i++)
        {
        	if(providers[i][0] == provider_id){
        		$form.find(":input[name='pre_provider_name']").val(providers[i][2]);
        	}
        }
        $form.find(":hidden[name='order_id']").val(order_id); // 设置表单内的订单id
    }
    function dialog_provider_ajax_submit()
    {		
        var $form   = $('#change_provider_form');
        
        var pre_provider_id = $form.find(":input[name='pre_provider_id']").val();
        var order_id = $form.find(":hidden[name='order_id']").val();
        var update_provider_id = $form.find(":input[name='update_provider_id']").val();
        if(update_provider_id == pre_provider_id){
        	alert("和原供应商相同,请检查!");
        	return;
        }
        var datastr = 'order_id=' + order_id + '&pre_provider_id='+pre_provider_id + '&update_provider_id='+update_provider_id;
        $.ajax({
	 		  async:false,
	          type: 'POST',
	          url: 'generate_cofco_c_orderV2.php?act=update_provider',
	          data: datastr,
	          dataType: 'json',
	          error: function() {
	        	  dialog_provider_disabled();
	          },
	          success: function(data) {
	        	  dialog_provider_disabled();
	          }
	      });
                  
    }
	/**
	 * 面板禁用
	 */
	function dialog_provider_disabled() {
		var $dialog = $("#dialog_provider");
		$dialog.hide();
       $("#hide").hide();
       location.reload();
	}
	
     function check_gt(val){
     	$.ajax({
    		    async:false,
             type: 'POST',
             url: 'generate_cofco_c_orderV2.php?act=check_gt',
             data: 'rec_id=' + val,
             dataType: 'json',
             error: function() {
            	 	alert("通过-c查询-gt的时候失败"); 
             },
             success: function(data) {
             	if(data){
             		alert("该采购订单对应的供退订单为："+data+"如果发生供价调整，对应的-gt在供应商退货一览显示差异,请谨慎操作。");
             	}
             
             }
         });
     }
    E('provider2').addEventListener('keyup', function(e){ changeProvider('provider2', false); var evt = e || window.event; if(evt.keyCode != 40 && evt.keyCode != 38) fill_provider_list('provider2'); }, false); // 13 enter
    function provider_init(id, pid) {
        for(var i = 0; i < providers.length; i++) {
            if(providers[i][0] == pid) {
                E(id).value = providers[i][2];
                break;
            }
        }
        E(id+'_hidden').value = pid;
    }
    E('provider3').addEventListener('keyup', function(e){ changeProvider('provider3', false); var evt = e || window.event; if(evt.keyCode != 40 && evt.keyCode != 38) fill_provider_list('provider3'); }, false); // 13 enter
    E('provider4').addEventListener('keyup', function(e){ changeProvider('provider4', false); var evt = e || window.event; if(evt.keyCode != 40 && evt.keyCode != 38) fill_provider_list('provider4'); }, false); // 13 enter
    // 批量完结采购订单  ljzhou 2013.04.11
    function batch_over_c(batch_order_sn) {
    	 document.getElementById('batch_over_c_'+batch_order_sn).disabled = 'true';
    	 $.ajax({
    		 async:false,
             type: 'POST',
             url: 'ajax.php?act=batch_over_c',
             data: 'batch_order_sn=' + batch_order_sn,
             dataType: 'json',
             error: function() {
            	 alert('ajax请求错误,批量完结采购订单失败:' + tracking_number); 
             },
             success: function(data) {
            	 if(data) {
                	 alert('批量完结采购订单成功：'+batch_order_sn);
            	 } else {
                	 alert('批量完结采购订单失败，系统找不到该批次订单：'+batch_order_sn);
            	 }
            	 window.location.href="generate_cofco_c_order.php"; 
             }
         });
    }
    
 // 批量审核采购订单 ytchen 2015.04.21
    function batch_check_pass(batch_order_sn) {
    	 document.getElementById('batch_check_pass_'+batch_order_sn).disabled = 'true';
    	 $.ajax({
    		 async:false,
             type: 'POST',
             url: 'ajax.php?act=batch_check_pass',
             data: 'batch_order_sn=' + batch_order_sn,
             dataType: 'json',
             error: function() {
            	 alert('ajax请求错误,批量审核采购订单失败'); 
             },
             success: function(data) {
            	 if(data) {
                	 alert('批量审核采购订单成功：'+batch_order_sn);
            	 } else {
                	 alert('批量审核采购订单失败，系统找不到该批次订单：'+batch_order_sn);
            	 }
            	 window.location.href="generate_cofco_c_order.php"; 
             }
         });
    }
 
 // 批量否决采购订单  ytchen 2015.04.21
    function batch_check_deny(batch_order_sn) {
    	 document.getElementById('batch_check_deny_'+batch_order_sn).disabled = 'true';
    	 $.ajax({
    		 async:false,
             type: 'POST',
             url: 'ajax.php?act=batch_check_deny',
             data: 'batch_order_sn=' + batch_order_sn,
             dataType: 'json',
             error: function() {
            	 alert('ajax请求错误,批量否决采购订单失败'); 
             },
             success: function(data) {
            	 if(data) {
                	 alert('批量否决采购订单成功：'+batch_order_sn);
            	 } else {
                	 alert('批量否决采购订单失败，系统找不到该批次订单：'+batch_order_sn);
            	 }
            	 window.location.href="generate_cofco_c_order.php"; 
             }
         });
    }
    // 检查商品是否维护条码
    function check_goods_maintain_barcode(goods_id,style_id) {
    	 var result = false;
    	 $.ajax({
    		 async:false,
             type: 'POST',
             url: 'ajax.php?act=check_goods_maintain_barcode',
             data: 'goods_id=' + goods_id + '&style_id='+style_id,
             dataType: 'json',
             error: function() {
            	 alert('ajax请求错误,检查商品是否维护条码goods_id:' + goods_id+' style_id:'+style_id); 
             },
             success: function(data) {
            	 if(data == true) {
            		 result = true;
            	 }
             }
         });
    	 return result;
    }
    
	/**
	 * 打印
	 */
	function pprint(url, mode)
	{
		if (mode == 'hidden') {
			var iframe = document.getElementById('_pprint_');
			if (!iframe) {
				var obj = document.createElement("iframe");
				obj.frameborder = 0;
				obj.width = 0;
				obj.height = 0;
				obj.id = '_pprint_';
                obj.border = 0;
				var iframe = document.body.appendChild(obj);
			}
			iframe.src = url;
		} else {
			window.open(url, "PrintWindow", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,copyhistory=no,width=800,height=920,left=10,top=240");			
		}
	}
    function print_product_receiving_list()
    {
        var orders = new Array();
        var form = document.getElementById('form2');
        var inputs = form.getElementsByTagName('input');
        for (var i = 0; i< inputs.length; i++) {
            if (inputs[i].type=='checkbox' && inputs[i].checked) {
                orders.push(inputs[i].value);
            }
        }
        if (orders.length <= 0) {
            alert('请选择采购订单');
            return;
        }
        pprint('print_product_receiving_list.php?print=1&order_id='+orders.join(','),'hidden');
    }
    function save_name(node){
    	E('provider').value = node.options[node.selectedIndex].innerHTML;
		$('#provider_hidden').val($("#cofco_provider").val());
    }
{/literal}
    provider_init('provider2','{$smarty.request.provider_id}');
</script>
</body>
</html>