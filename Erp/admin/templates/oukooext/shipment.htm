<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>订单称重发货</title>
{literal}
<script type="text/javascript" src="misc/jquery.js"></script>
<script type="text/javascript" src="misc/jquery.ajaxQueue.js"></script>
<style type="text/css">
<!--
.STYLE1 {color: #FF0000}
li{list-style:none;font-size:14px;line-height:200%;}
table, td,tr{
    border:1px solid #B7B7B7;
    border-collapse:collapse;
}
-->
</style>
{/literal}
<script type="text/javascript">
//<![CDATA[
    var type = '{$type}';
    // {literal}
    var total = 0;
    window.onload = function() {
        document.getElementById('tracking_number').select();
        document.getElementById('tracking_number').focus();
        document.getElementById('batch_bill_no').value = "";
    }
    function change_type(radio) {
        var list = document.getElementById("list");
        list.parentNode.removeChild(list);
        document.getElementById("batch_bill_no").value = '';
        document.getElementById("tracking_number").value = '';
        var form = document.getElementById("form");
        var ul = document.createElement('ul');
        ul.setAttribute("id", "list");
        var length = form.childNodes;
        var type = document.getElementById("type");
        total = 0;
        form.insertBefore(ul, type);
        var p = document.getElementById("number");
        if (radio.value == 2) {
            p.innerHTML = "已扫描运单的数量：<span id='tips'>0</span>&nbsp;&nbsp;&nbsp;&nbsp;<input type='button' value='批量称重' onclick='get_batch_weight()'></input>";
        } else {
            p.innerHTML = "";
        }
    }
    
    // 数组去重
    Array.prototype.uniquelize = function()
    {
    	var n = {},r=[]; //n为hash表，r为临时数组
    	for(var i = 0; i < this.length; i++)
    	{
    		// 去掉空行
			if(!(this[i].trim())) {
				continue;
			}
    		if (!n[this[i]])
    		{
    			n[this[i]] = true; 
    			r.push(this[i]);
    		}
    	}
    	return r;
    }

    // 批量称重特殊处理 ljzhou 2013.01.24
    function get_batch_weight() {
        var tracking_numbers = document.getElementById("tracking_number").value;
        tracking_numbers = tracking_numbers.replace(/^\s+|\s+$/g,"");
        if (tracking_numbers == '') {
            alert('请输入运单号');
            return false;
        }
      	var tracking_number_arr = new Array();  
      	tracking_number_arr = tracking_numbers.split('\n'); 
      	// 数组去重
      	tracking_number_arr = tracking_number_arr.uniquelize();

        var leqee_weight = get_clipboard_data();
        var i = 0;
        while (leqee_weight == undefined) {
            leqee_weight = get_clipboard_data();
            if (leqee_weight != undefined) {
                break;
            }
            if (i >= 20) {
                break;
            }
            i++;
        }

        if (leqee_weight != undefined) {
       	 var weight = prompt("输入称重结果/发货", leqee_weight);
            if (weight) {
                 // 得到现在时间的称重重量
           	     var last_weight = get_realtime_weight();                 
           	 
             	 var check_weight = check_weight_number(weight); // 判断字符正确性
             	 if(!check_weight) {
                  	alert("请输入正确的数字！不要有其他字符");
                  	return false;
             	 }
             	 if(weight > 999) {
             		 alert('重量离谱啊，请检查下是否是称重的重量！');
             		 return false;
             	 }
             	 var notice_once = false;
             	 var tracking_number_arr1 = new Array();
           	     //批量称重分别检测每个运单号
	      	     for (var j=0;j<tracking_number_arr.length;j++) {
	      	         var tracking_number = tracking_number_arr[j].trim();
	      	         var order_status = check_order_status(tracking_number); // 检查订单状态，取消和没有订单对应的订单不能称重
	                 if (order_status == 2) {
	                    alert('该运单号对应的订单已经取消:' + tracking_number + '\n请删除该运单号再扫描下一个');
	                   	return false;
	                 } else if(order_status == -1) {
	                   	alert('该运单号没有订单对应:' + tracking_number + '\n请删除该运单号再扫描下一个');
	                   	return false;
	                 }else if(order_status == -2) {
	                	 if(!confirm('该运单号有退款申请,请检查:' + tracking_number + '?\n1、强制确认请点 确认\n2、否则请点 取消')){
	                		 return false;
	                	 }
		             }

	                 var shipping_status = check_order_shipping_status(tracking_number); // 检查发货状态，非代发货状态对应的订单不能称重
	                 if (!shipping_status) {
	                 	alert('该运单号对应的订单不是待发货状态:' + tracking_number + '\n请删除该运单号再扫描下一个');
	                 	return false;
	                 }
	                 
	                 var weighing_check = check_weighing(tracking_number, weight); // 称重校验
	                 if (weighing_check == -2) {
	                	 // 只弹窗一次
	                	 if(!notice_once) {
	                		notice_once = true;
	 	                   	alert('称重结果异常,请检查是否多发或者漏发商品:' + tracking_number);
		                   	if(!confirm("检查后确认没错？\n1、有误的请点“取消”，整理好包裹再称重\n然后删除运单号重新扫描\n2、检查没错的请点确认")) return false; 
	                	 }
	                 }
	                 
	                 // 记录2次称重的重量
	                 //add_tracking_twice_weight(tracking_number, weight,last_weight);
	                 tracking_number_arr1[j] = tracking_number;
	             }
          	     var consumable_barcode = check_facility_id_party_id (tracking_number_arr1);
          	     if (consumable_barcode != "") {
	          	     var barcode1 = consumable_barcode.split(";");
	          	     var num_list = barcode1[0].split(","); 
	          	     var error_list = barcode1[1].split(",");
	        	     var num_length = num_list.length;
	                 //如果最后一个是，需要截取后
	                 var last_chr = consumable_barcode.substr(consumable_barcode.length-1,1);
          	     
	          	     var return_barcode = num_list[0];
	          	     //字符串转换为数据循环添加
	           	     for(var i=0; i<tracking_number_arr1.length;i++) {
	           	    	if (last_chr == "," && num_length == 2 && error_list.length < 1) {
	                 	     ul_append_child(tracking_number, weight, '');
	                    } else {
	                    	var tracking_number = tracking_number_arr1[i];
	              	    	if (num_length <= 1) {
	              	    		ul_append_child(tracking_number, weight, "");
	              	    	} else {
	              	    		var flag = num_list.contains(tracking_number);
	              	    		var flag1 = error_list.contains(tracking_number);
	                  	    	if (flag) {
	       		                	ul_append_child(tracking_number, weight, return_barcode);
	                  	    	} else if (flag1) {
	                  	    		ul_append_child(tracking_number, weight, return_barcode+" 库存不足");
	                  	    	} else {
	                  	    		ul_append_child(tracking_number, weight, "");
	                  	    	}
	              	    	}
	                    }
	           	     }
          	      } else {
	           	     for(var i=0; i<tracking_number_arr1.length;i++) {
		                 var tracking_number = tracking_number_arr1[i];
		              	 ul_append_child(tracking_number, weight, "");
		           	 }
          	      }
            }
       } else {
          	alert("称重结果显示异常，请删除已扫描运单号，重新扫描！\n注意检查下火狐的版本，版本不要超过12.0！\n官网下载：http://firefox.com.cn/download/  在这个官网页面下载12.0版本的火狐即可！");
       }
      
    }
    Array.prototype.contains = function (element) {
    	  
        for (var i = 0; i < this.length; i++) {
            if (this[i] == element) {
                return true;
            }
        }
        return false;
    }
    function get_weight(keyCode) {
        var tracking_number = document.getElementById("tracking_number").value;
        tracking_number = tracking_number.replace(/^\s+|\s+$/g,"");
        // return键就不管了，免得触发键和仓库键盘操作冲突
        if (tracking_number == '') {
        	if(keyCode != KEY.RETURN) {
                alert('请输入运单号');
        	}
            return false;
        }
       
        var order_status = check_order_status(tracking_number); // 检查订单状态，取消和没有订单对应的订单不能称重  ljzhou 2012.10.11
        if (order_status == 2) {
        	alert('该运单号对应的订单已经取消:' + tracking_number + '\n请删除该运单号再扫描下一个');
        	return false;
        } else if(order_status == -1) {
        	alert('该运单号没有订单对应:' + tracking_number + '\n请删除该运单号再扫描下一个');
        	return false;
        }else if(order_status == -2) {
        	if(!confirm('该运单号有退款申请,请检查:\n1、强制确认请点 确认\n2、否则请点 取消')){
       		 	return false;
       	 	}
      	}
        
        var shipping_status = check_order_shipping_status(tracking_number); // 检查发货状态，非代发货状态对应的订单不能称重
        if (!shipping_status) {
        	alert('该运单号对应的订单不是待发货状态:' + tracking_number + '\n请删除该运单号再扫描下一个');
        	return false;
        }
        
        var leqee_weight = get_realtime_weight();
        if (leqee_weight != undefined) {
        	 var weight = prompt("输入称重结果/发货", leqee_weight);
             if (weight) {
                 // 得到现在时间的称重重量
            	 var last_weight = get_realtime_weight();                 
            	 var check_weight = check_weight_number(weight); // 判断字符正确性
            	 if(!check_weight) {
                 	alert("请输入正确的数字！不要有其他字符");
                 	return false;
            	 }
            	 if(weight > 999) {
            		 alert('重量离谱啊，请检查下是否是称重的重量！');
            		 return false;
            	 }
                 var weighing_check = check_weighing(tracking_number, weight); // 称重校验  ljzhou 2012.10.23
                 if (weighing_check == -2) {
                 	alert('称重结果异常,请检查是否多发或者漏发商品:' + tracking_number);
                 	if(!confirm("检查后确认没错？\n1、有误的请点“取消”，整理好包裹再称重\n然后删除运单号重新扫描\n2、检查没错的请点确认")) return false;
                 }
                 
                 // 记录2次称重的重量
                 //add_tracking_twice_weight(tracking_number, weight,last_weight);
                 
                 //查询面单的仓库 物理 上海仓使用
                 var consumable_barcode = check_facility_id_party_id (tracking_number);
                 if (consumable_barcode != "") {
	                 var barcode1 = consumable_barcode.split(";");
	          	     var num_list = barcode1[0].split(","); 
	          	     var error_list = barcode1[1].split(",");
	                 var num_length = num_list.length;
	                 //如果最后一个是，需要截取后
	                 var last_chr = consumable_barcode.substr(consumable_barcode.length-1,1);
	                 if (last_chr == "," && num_length == 2 && error_list.length < 1) {
	                	 ul_append_child(tracking_number, weight, '');
	                 } else {
	                	 var flag1 = error_list.contains(tracking_number);
	                	 if (flag1) {
	                		 ul_append_child(tracking_number, weight, num_list[0]+" 库存不足");
	                	 } else {
			                 ul_append_child(tracking_number, weight, num_list[0]);
	                	 }
	                 }
                 } else {
                	 ul_append_child(tracking_number, weight, "");
                 }
                 document.getElementById("tracking_number").value = '';
             }
        } else {
          	alert("称重结果显示异常，请删除已扫描运单号，重新扫描！\n注意检查下火狐的版本，版本不要超过12.0！\n官网下载：http://firefox.com.cn/download/  在这个官网页面下载12.0版本的火狐即可！");
        }
       
    }
    
    // 把两次的重量记录到数据库里
    function add_tracking_twice_weight(tracking_number, first_weight,last_weight) {
   	   $.ajax({
   		 async:false,
            type: 'POST',
            url: 'ajax.php?act=add_tracking_twice_weight',
            data: 'tracking_number=' + tracking_number + '&first_weight=' + first_weight + '&last_weight=' + last_weight,
            dataType: 'json',
            error: function() {
           	   alert('ajax请求错误,把两次的重量记录到数据库里失败:' + tracking_number); 
            },
            success: function(data) {
            }
        });
    }
    
    // 得到实时的重量
    function get_realtime_weight() {
        var leqee_weight = get_clipboard_data();
        var i = 0;
        while (leqee_weight == undefined) {
            leqee_weight = get_clipboard_data();
            if (leqee_weight != undefined) {
                break;
            }
            if (i >= 20) {
                break;
            }
            i++;
        }
        return leqee_weight;
    }
 
    //检查仓库
    function check_facility_id_party_id (tracking_number) {
    	var result = "";
    	$.ajax({
   		    async:false,
            type: 'POST',
            url: 'ajax.php?act=get_facility_id_by_tracking_number',
            data: 'tracking_number=' + tracking_number,
            dataType: 'json',
            error: function() {	
            	alert('ajax请求错误,检查仓库失败:' + tracking_number); 
            },
            success: function(data) {
           	 	if(data != ""){
           	 		//检查耗材条码是否正确
           	 		result = check_barcode("请扫描包裹对于的耗材条码", data);
           		}
           	 }
        }); 
    	return result;
    }
    //检查耗材条码
    function check_barcode(info, tracking_number) {
    	 var consumable_barcode = prompt(info, "");
    	 var result = "";
         if (consumable_barcode) {
        	 $.ajax({
        		 async:false,
                 type: 'POST',
                 url: 'ajax.php?act=check_consumable_item',
                 data: 'tracking_number=' + tracking_number + '&barcode=' + consumable_barcode,
                 dataType: 'json',
                 error: function() {	alert('ajax请求错误, 请重新扫描耗材条码:' + consumable_barcode); },
                 success: function(data) {
                	 if (data['message'] != '') {
                		result += check_barcode(data['message']+" \n扫描耗材条码有误,请重新扫描", tracking_number);
                	 } else {
                		// 逻辑重构，只记录运单条码映射关系，先不出库 ljzhou 2013.03.19
                		add_barcode_tracking_mapping(consumable_barcode,tracking_number);
                		result += consumable_barcode + ",";
                		result += tracking_number + ";";
                	 }
                 }
             }); 
        	
         } else {
        	 if (!confirm("确认不需要继续扫描吗？")) {
        		 check_barcode("请扫描包裹对于的耗材条码", tracking_number);
        	 }
         }
         return result;
    }
    
    function add_barcode_tracking_mapping(consumable_barcode, tracking_number) {
    	 $.ajax({
    		 async:false,
             type: 'POST',
             url: 'ajax.php?act=barcode_tracking_mapping',
             data: 'tracking_number=' + tracking_number + '&barcode=' + consumable_barcode,
             dataType: 'json',
             error: function() {
            	 //映射出错
            	 alert('ajax请求错误,耗材条码运单映射失败:' + tracking_number); 
             },
             success: function(data) {
            	 
             }
         });
    }
    
    function auto_pick_up(consumable_barcode, tracking_number) {
    	var result = "";
    	 $.ajax({
    		 async:false,
             type: 'POST',
             url: 'ajax.php?act=pick_up',
             data: 'tracking_number=' + tracking_number + '&barcode=' + consumable_barcode,
             dataType: 'json',
             error: function() {
            	 //胶带出库失败
            	 alert('ajax请求错误,耗材商品失败:' + tracking_number); 
             },
             success: function(data) {
            	 result += data.tracking_number+";";
            	 result += data.tracking_number_error;
             }
         });
    	 return result;
    }
    function ul_append_child(tracking_number, weight, barcode) {
    	//称重即记录重量
        $.ajax({
        	async:false,
            type: 'POST',
            url: 'ajax.php?act=update_leqee_weight',
            data: 'tracking_number=' + tracking_number + '&weight=' + weight,
            dataType: 'json',
            error: function() {	alert('ajax请求错误, 请重新扫描面单号:' + tracking_number); },
            success: function(data) {
				var ul = document.getElementById("list");
				var li = document.createElement('li');
				if (barcode != "") {
					var li_value = document.createTextNode("面单号："+tracking_number+" 重量："+weight + " 耗材条码:" + barcode);
				} else {
					var li_value = document.createTextNode("面单号："+tracking_number+" 重量："+weight);
				}
				check_remove_child(tracking_number, weight); // 多个运单号只展示最后1个  ljzhou 2012.12.21
				li.appendChild(li_value);
				ul.appendChild(li); 
				document.getElementById("batch_bill_no").value += tracking_number+'-'+weight+"\n";
				li.onclick = function() {
				    var result = confirm("删除记录："+li.innerHTML);
				    if (result) {
				        remove_ul(li.innerHTML);
				        data = document.getElementById("batch_bill_no").value;
				        document.getElementById("batch_bill_no").value = data.replace(tracking_number+"-"+weight+"\n","");
				    } 
				    else 
				    {
				    	// 增加修改重量功能 ljzhou 2012.12.21
				    	var result = confirm("是否修改重量：\n"+li.innerHTML);
						if (result) {
				        	var update_weight = prompt("输入修改的重量", weight);
			            	var check_weight = check_weight_number(update_weight); // 判断字符正确性
			            	if(!check_weight) {
			                    alert("请输入正确的数字！不要有其他字符");
			                 	return false;
			            	}
			            	if(update_weight > 999) {
			            		 alert('重量离谱啊，请检查下是否是称重的重量！');
			            		 return false;
			            	}
			                var weighing_check = check_weighing(tracking_number, update_weight); // 称重校验  ljzhou 2012.10.23
			                if (weighing_check == -2) {
			                 	alert('称重结果异常,请检查是否多发或者漏发商品:' + tracking_number);
			                 	if(!confirm("检查后确认没错？\n1、有误的请点“取消”，整理好包裹再称重\n然后删除运单号重新扫描\n2、检查没错的请点确认")) return false;
			                }
				        	ul_update_child(tracking_number, update_weight, li.innerHTML);
						    data = document.getElementById("batch_bill_no").value;
						    document.getElementById("batch_bill_no").value = data.replace(tracking_number+"-"+weight+"\n",tracking_number+"-"+update_weight+"\n");
						} else {
							return false;
						}
				    }
				};
            }
        }); 
    }
    // 多个运单号只展示最后1个
    function check_remove_child(tracking_number, weight) {
        var ul = document.getElementById("list");
        var li = document.getElementsByTagName('li');
        for (var i = 0; i < li.length ; i++) {
            if (li[i].innerHTML.indexOf(tracking_number) > 0) {
                ul.removeChild(li[i]);
			    data = document.getElementById("batch_bill_no").value;
		        // 把原来的记录删掉 
		        var reg = new RegExp(tracking_number+".+\n"); 
                document.getElementById("batch_bill_no").value = data.replace(reg,"");
		        break;
            }
        }
    }

    // 检测输入的重量
    function check_weight_number(weight) {
		var reg = /(^\d+\.?\d+$)|(^\d+$)/;
        if(!weight.match(reg)) {
        	return false;
        } else {
        	return true;
        }
    }
    
	// 修改称重重量
    function ul_update_child(tracking_number, weight, li_value) {
        $.ajax({
        	async:false,
            type: 'POST',
            url: 'ajax.php?act=update_leqee_weight',
            data: 'tracking_number=' + tracking_number + '&weight=' + weight,
            dataType: 'json',
            error: function() {	alert('ajax请求错误, 请重新扫描面单号:' + tracking_number); },
            success: function(data) {
                var ul = document.getElementById("list");
                var li = document.getElementsByTagName('li');
                for (var i = 0; i < li.length ; i++) {
                	if (li[i].innerHTML == li_value) {
                    	li[i].innerHTML = "面单号："+tracking_number+" 重量："+weight;
                    }
                }
            }
        });
    }
    function remove_ul(li_value){
       var ul = document.getElementById("list");
       var li = document.getElementsByTagName('li');
       for (var i = 0; i < li.length ; i++) {
           if (li[i].innerHTML == li_value) {
               ul.removeChild(li[i]);
           }
       }
    }
    
    var KEY = {
            RETURN: 13,  // 回车
            CTRL: 17,    // CTRL
            TAB: 9
    };
    
    function change_tracking_number(event) {
        var radio = document.getElementsByName("type");
        var type_value;
        for ( var i = 0; i < radio.length; i++) {
            if (radio[i].checked == true) {
                type_value = radio[i].value;
            }
        }
        eventObj = event == null ? window.event : event;
        keyCode = eventObj.which == null ? event.keyCode : eventObj.keyCode;
        if (keyCode == KEY.RETURN || keyCode == KEY.CTRL) {
            if (type_value == 1) {
                get_weight(keyCode);
            } else {
            	if(keyCode == KEY.CTRL) {
                    document.getElementById('tracking_number').value += "\n";
            	}
                total++;
                document.getElementById('tips').innerHTML = total;
                if (total % 8 == 0) {
                    document.getElementById('tracking_number').rows += 8;
                }
            }
        }
    }
    //扫描运单号时检查订单状态
    function check_order_status(tracking_number) {
    	var order_status;
    	$.ajax({
    		async:false,
    		type: 'POST',
            url: 'ajax.php?act=check_order_status',
            data: 'tracking_number=' + tracking_number,
            dataType: 'json',
            error: function() {	alert('ajax请求错误, 扫描运单号时检查订单状态失败:' + tracking_number); return false},
            success: function(data) {
               order_status = data;
            }
        }); 
        return order_status;
    }
    
    //扫描运单号时检查订单发货状态
    function check_order_shipping_status(tracking_number) {
    	var shipping_status=false;
    	$.ajax({
    		async:false,
    		type: 'POST',
            url: 'ajax.php?act=check_order_shipping_status',
            data: 'tracking_number=' + tracking_number,
            dataType: 'json',
            error: function() {	alert('ajax请求错误, 扫描运单号时检查订单发货状态失败:' + tracking_number); return false},
            success: function(data) {
            	if(data==true) {
            		shipping_status = true;
            	}
            }
        }); 
        return shipping_status;
    }
    
    //称重校验
    function check_weighing(tracking_number, weight) {
    	// 暂时不需要
    	return 0;
    	var weighing_check;
    	$.ajax({
    		async:false,
    		type: 'POST',
            url: 'ajax.php?act=check_weighing',
            data: 'tracking_number=' + tracking_number + '&weight=' + weight,
            dataType: 'json',
            error: function() {	alert('ajax请求错误, 扫描运单号时称重校验失败:' + tracking_number); return false},
            success: function(data) {
            	weighing_check = data;
            }
        }); 
        return weighing_check;
    }
    function get_clipboard_data() {
        if (window.clipboardData) {
            return (window.clipboardData.getData('text'));
        } else {
            if (window.netscape) {
                var i = 0;
                try {
                    netscape.security.PrivilegeManager
                            .enablePrivilege("UniversalXPConnect");
                    var clip = Components.classes["@mozilla.org/widget/clipboard;1"]
                            .createInstance(Components.interfaces.nsIClipboard);
                    if (!clip) {
                        return;
                    }
                    var trans = Components.classes["@mozilla.org/widget/transferable;1"]
                            .createInstance(Components.interfaces.nsITransferable);
                    if (!trans) {
                        return;
                    }
                    trans.addDataFlavor("text/unicode");
                    clip.getData(trans, clip.kGlobalClipboard);
                    var str = new Object();
                    var len = new Object();
                    trans.getTransferData("text/unicode", str, len);
                } catch (e) {
                    if (i < 10) {
                        setTimeout("get_clipboard_data();", '100');
                        i++;
                        return;
                    }
                    //alert("您的firefox安全限制限制您进行剪贴板操作，请打开'about:config'将signed.applets.codebase_principal_support'设置为true'之后重试，相对路径为firefox根目录/greprefs/all.js");
                    //return null;
                }
                if (str) {
                    if (Components.interfaces.nsISupportsWString) {
                        str = str.value
                                .QueryInterface(Components.interfaces.nsISupportsWString);
                    } else {
                        if (Components.interfaces.nsISupportsString) {
                            str = str.value
                                    .QueryInterface(Components.interfaces.nsISupportsString);
                        } else {
                            str = null;
                        }
                    }
                }
                if (str) {
                    return (str.data.substring(0, len.value / 2));
                }
            }
        }
        return null;
    }
    function issue(obj) {
        if (document.getElementById('batch_bill_no').value == '') {
            alert('没有运单号'); 
            return false;
        } 
    }
    // {/literal}
    //
    //!>
</script>
</head>
<body>
<h3>订单称重发货</h3>
<p style="color:red;font-size:18px;"><b>目前所在仓库：{$facilities}</b></p>
{if $smarty.request.act == 'submit'}
<table class="bWindow" style="width:600px;">
<tr><td colspan="2"><h3>本次共计发货运单数： {$bill_no_num} <br /><br />发货结果如下：</h3></td></tr>
{if $canceled_orders}
<tr><td colspan="2"><h3>以下订单被取消</h3></td></tr>
<tr><td>运单号</td><td>已取消 订单号</td></tr>
{foreach from=$canceled_orders item=item}
<tr><td>{$item.bill_no}</td><td><a href="order_edit.php?order_id={$item.order.order_id}" target="_blank">{$item.order.order_sn}</a></td></tr>
{/foreach}
{/if}

{if $prepayment_consume_fail}
<tr><td colspan="2"><h3 style="color: red;">以下订单对应分销预存款抵扣失败订单。请赶紧联系运营、或财务</h3></td></tr>
<tr><td>运单号</td><td>分销预存款抵扣失败订单 订单号</td></tr>
{foreach from=$prepayment_consume_fail item=item}
<tr><td>{$item.bill_no}</td><td><a href="order_edit.php?order_id={$item.order.order_id}" target="_blank">{$item.order.order_sn}</a>&nbsp;({$item.msg})</td></tr>
{/foreach}
{/if}

{if $best_time_orders}
<tr><td colspan="2"><h3>以下订单还未到发货时间</h3></td></tr>
<tr><td>运单号</td><td>订单号</td></tr>
{foreach from=$best_time_orders item=item}
<tr><td>{$item.bill_no}</td><td><a href="order_edit.php?order_id={$item.order.order_id}" target="_blank">{$item.order.order_sn}</a></td></tr>
{/foreach}
{/if}

{if $noinvoice_orders}
<tr><td colspan="2"><h3>以下订单没有填写发票号</h3></td></tr>
<tr><td>运单号</td><td>订单号</td></tr>
{foreach from=$noinvoice_orders item=item}
<tr><td>{$item.bill_no}</td><td><a href="order_edit.php?order_id={$item.order.order_id}" target="_blank">{$item.order.order_sn}</a></td></tr>
{/foreach}
{/if}

{if $badstatus_orders}
<tr><td colspan="2"><h3>以下订单的之前的状态不是待发货</h3></td></tr>
<tr><td>运单号</td><td>订单号</td></tr>
{foreach from=$badstatus_orders item=item}
<tr><td>{$item.bill_no}</td><td><a href="order_edit.php?order_id={$item.order.order_id}" target="_blank">{$item.order.order_sn}</a></td></tr>
{/foreach}
{/if}

{if $pallet_bill_nos}
<tr><td colspan="2"><h3>以下运单号所属业务需要通过码托发货</h3></td></tr>
<tr><td colspan="2">运单号</td></tr>
<tr><td colspan="2">{$pallet_bill_nos}</td></tr>
{/if}

{if $noorder_bill_nos}
<tr><td colspan="2"><h3>以下运单号没有订单对应</h3></td></tr>
<tr><td colspan="2">运单号</td></tr>
{foreach from=$noorder_bill_nos item=bill_no}
<tr><td colspan="2">{$bill_no}</td></tr>
{/foreach}
{/if}

{if $ok_orders}
<tr><td colspan="2"><h3>以下订单成功发货</h3></td></tr>
<tr><td>运单号</td><td>重量（g）</td><td>订单号</td></tr>
{foreach from=$ok_orders item=item}
<tr><td>{$item.bill_no}</td>
{if $smarty.request.type == 2}
<td>{$weight}</td>
{else}
   {foreach from=$weight item=value key=key}
   {if $key == $item.bill_no}
   <td>{$value}</td>{/if}
   {/foreach}
{/if}
<td><a href="order_edit.php?order_id={$item.order.order_id}" target="_blank">{$item.order.order_sn}</a></td></tr>
{/foreach}
{/if}

{if $merge_orders_update_weight}
<tr><td colspan="2"><h3>以下订单运单号录入不全，已记录称重结果，但不能操作发货</h3></td></tr>
<tr><td>运单号</td><td>重量（g）</td></tr>
{foreach from=$merge_orders_update_weight item=item}
<tr><td>{$item.tracking_number}</td><td>{$item.weight}</td></tr>
{/foreach}
{/if}

{if $error_mask_phones}
<tr><td colspan="2"><h3>以下订单屏蔽号码异常</h3></td></tr>
<tr><td colspan="2">订单号</td></tr>
{foreach from=$error_mask_phones item=item key=key}
<tr><td colspan="2">{$key}</td></tr>
{/foreach}
{/if}

{if $merge_orders}
<tr><td colspan="2"><h3>以下订单运单号录入不全，不能操作发货</h3></td></tr>
<tr><td colspan="2">运单号</td></tr>
{foreach from=$merge_orders item=bill_no}
<tr><td colspan="2">{$bill_no}</td></tr>
{/foreach}
{/if}

</table>
{/if}
<form  id="form" action="" method="post" onsubmit=" return issue(this);">
<ul id="list"></ul>
<input id="type" type="radio" class="type" name="type" value="1" checked="checked" onchange="change_type(this)">单个称重</input><br/><br/>
<input type="radio" id="type" name="type" value="2" onchange="change_type(this)">批量称重</input><br/><br/>
运单号：<br/><textarea name="tracking_number" cols="25" rows="8" id="tracking_number" onkeyup="change_tracking_number(event)"></textarea>
<p id="number"></p><br/>
<input type="hidden" name="act" value="submit"></input>
<input type="hidden" name="batch_bill_no" id="batch_bill_no" value=""></input>
<input type="submit" name="submit" value="发货"></input>
</form>
</body>
</html>